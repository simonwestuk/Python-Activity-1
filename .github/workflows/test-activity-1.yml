name: Activity 1 Tests

on:
  push:
    branches:
      - main  # Adjust this if you use a different branch as your default
  pull_request:
    branches:
      - main

jobs:
  accitivity_1_tests:
    runs-on: ubuntu-latest
    permissions:   # Set specific permissions for the GITHUB_TOKEN
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Specify the Python version you need
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Convert Notebook to Script
      run: jupyter nbconvert --to script Python_Activity_1.ipynb  # Replace with your notebook name
    - name: Run Tests
      run: python -m unittest discover -s . -p "test_*.py"  # Adjust the pattern to match your test files

    - name: Post Feedback on Commit
      uses: actions/github-script@v5
      if: always()
      with:
        script: |
          const fs = require('fs');
          const outputFilePath = 'unittest_output.txt';
          let output;
          try {
            output = fs.readFileSync(outputFilePath, 'utf8');
          } catch (error) {
            output = 'Failed to read test output file. Make sure the test commands are generating the output file correctly.';
          }
          
          let commentBody = `## :test_tube: Test Results :test_tube:\n`;
          if (output) {
            commentBody += "```\n" + output + "\n```";
          } else {
            commentBody += "No test output was captured.";
          }
          
          // Shorten if too long for a comment
          if (commentBody.length > 65536) {
            commentBody = commentBody.substr(0, 65500) + "\n...output truncated...";
          }
          
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: commentBody
          });
        github-token: ${{secrets.GITHUB_TOKEN}}